********************************
    HELPFILE for PixCteCorr   
********************************

Pixel-based CTE correction for ACS/WFC. Only parallel CTE loss is corrected for now.

Input(s)
========
FLT image(s) with CTE tails.

Output(s)
=========
FLT image(s) without CTE tails and optional intermediate files. All output(s) are stored in the same directory as the input(s).

Limitations
===========
1. Only operates on ACS/WFC detector for now.
2. Developed for use with full-frame GAIN=2 FLT images as input.
3. Not fully tested with any other formats.
4. Noise is slightly enhanced in the output (see Anderson & Bedin 2010).
5. Assumes a linear time dependence for a given set of coefficients.
6. Does not account for traps with very long release timescale but it is not an issue for ACS/WFC.
7. Does not account for second-exposure effect.
8. Multi-threading support was not implemented in this version as it would interfere with eventual pipeline operation. 

See Also
========
Anderson & Bedin 2010, PASP, 122, 1035

Parameters
==========
inFits (string or list of strings)
    FLT image or set of FLT images to be corrected. Can be specified using any of:
        * single filename ("j1234567q_flt.fits")
        * a Python list of filenames
        * a partial filename with wildcards ("*flt.fits" or "datadir$j*flt.fits") 
        * filename of an ASN table ("j12345670_asn.fits")
        * an at-file ("@input")

    Filenames can contain environment variables.
    Header in each file needs to be modified to have PCTEFILE keyword pointed 
    to a FITS table with correction coefficients, which can be obtained from 
    the ACS Team. Does not work on RAW. 
    Input image that is already de-striped is desired but not compulsory. 
    Using image with striping will enhance the stripes in output. 
    Calibrations that have been applied to FLT should not significantly affect the result.

outFits (string)
    USE DEFAULT IF inFits HAS MULTIPLE FILES.
    CTE corrected image in the same directory as input.    
    If not given, will use ROOTNAME_cte.fits instead. 
    Existing file will be overwritten. 
    EXT 0 header will be updated. 
    ERR arrays will be added in quadrature with 10% of the correction. 
    DQ not changed.

noise (int)
    Noise mitigation algorithm. As CTE loss occurs before noise is added at 
    readout, not removing noise prior to CTE correction will enhance the noise in output image.   
        0: None.
        1: Vertical linear, +/- 1 pixel (DEFAULT).

debug (Yes/No)
    Generate intermediate files in the same directory as input? 
    Default is no. Useful for debugging. 
    These will be created:
        1. ROOTNAME_cte_rn_tmp.fits - Noise image.
        2. ROOTNAME_cte_wo_tmp.fits - Noiseless image.
        3. ROOTNAME_cte_log.txt - Log file.

How to use the tasks stand alone interface in your own scripts:
===============================================================
For general use in a script, the function CteCorr() should be used with the following syntax:

    def CteCorr(input, outFits='', noise=1, intermediateFiles=False) 

For a single image, the function YCte() can be used directly and has the following input:

    def YCte(inFits, outFits='', noise=1, intermediateFiles=False)

Basic example of how to call CteCorr() yourself from a python command line, 
this example will use the default parameter settings:

>>> from acstools.PixCteCorr import CteCorr
>>> CteCorr('j*q_flt.fits')

Optional preprocessing for nonstandard FLT input:
=================================================
If you are not using a fully calibrated FLT image as input,
you might also need to do one or more of the following before running the task:

* Convert image to unit of electrons.

* For combined image (e.g., superdark), set noise=0.
      OR
  hedit pctefile_101109.fits[0] RN2_NIT X
  where X is an integer
  (0 to 8, inclusive, electrons upper limit for noise mitigation).

* Primary FITS header (EXT 0) must have these keywords populated:
      * ROOTNAME
      * INSTRUME (must be ACS)
      * DETECTOR (must be WFC)
      * CCDAMP (ABCD, AD, BC, A, B, C, or D)
      * EXPSTART
      * ATODGNA, ATODGNB, ATODGNC, ATODGND

* SCI FITS header (EXT 1 or 4) must have these keywords populated:
      * EXTNAME (must be SCI)
      * EXTVER (1 or 2) 

* ERR FITS header (EXT 2 or 5) must have these keywords populated:
      * EXTNAME (must be ERR)
      * EXTVER (1 or 2) 

* DQ FITS header (EXT 3 or 6) must have these keywords populated:
      * EXTNAME (must be DQ)
      * EXTVER (1 or 2) 
